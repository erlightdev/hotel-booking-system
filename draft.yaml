models:
  User:
    id: id
    name: string:100
    email: string:150 unique
    phone: string nullable
    password: string
    avatar: string:255 nullable
    role: enum:guest,admin,staff default:guest
    email_verified_at: timestamp nullable
    last_login_at: timestamp nullable
    softDeletes: true
    timestamps: true
    relationships:
      hasMany: Booking, Review, SystemLog

  Hotel:
    id: id
    name: string:100
    description: text nullable
    address: string:255
    city: string:100
    state: string:100
    country: string:100
    total_rooms: integer
    star_rating: decimal(3,2) nullable
    contact_email: string:150
    contact_phone: string:20
    is_active: boolean default:true
    amenities: json nullable
    softDeletes: true
    timestamps: true
    relationships:
      hasMany: Room, Review

  Room:
    id: id
    hotel_id: foreignId:hotels
    room_number: string:50
    type: enum:single,double,suite,family,deluxe
    max_occupancy: integer
    base_price: decimal(10,2)
    is_available: boolean default:true
    description: text nullable
    amenities: json nullable
    softDeletes: true
    timestamps: true
    relationships:
      belongsTo: Hotel
      hasMany: Booking

  Booking:
    id: id
    user_id: foreignId:users
    room_id: foreignId:rooms
    check_in_date: date
    check_out_date: date
    total_guests: integer
    total_price: decimal(10,2)
    status: enum:pending,confirmed,checked_in,checked_out,cancelled default:pending
    booking_reference: string:50 unique
    special_requests: text nullable
    softDeletes: true
    timestamps: true
    relationships:
      belongsTo: User, Room
      hasOne: Payment

  Payment:
    id: id
    booking_id: foreignId:bookings
    amount: decimal(10,2)
    payment_method: enum:credit_card,debit_card,paypal,bank_transfer,cash
    transaction_id: string nullable
    status: enum:pending,completed,failed default:pending
    paid_at: timestamp nullable
    softDeletes: true
    timestamps: true
    relationships:
      belongsTo: Booking

  Review:
    id: id
    user_id: foreignId:users
    hotel_id: foreignId:hotels
    rating: decimal(3,2)
    comment: text nullable
    stayed_at: date
    softDeletes: true
    timestamps: true
    relationships:
      belongsTo: User, Hotel

  SystemLog:
    id: id
    user_id: foreignId:users
    model: string:100
    model_id: integer
    action: enum:create,update,delete
    description: text
    user_role: enum:guest,admin,staff
    changed_at: timestamp
    softDeletes: true
    timestamps: false
    relationships:
      belongsTo: User
    indexes:
      - name: system_log_model_index
        columns: [model]
      - name: system_log_user_index
        columns: [user_id]
      - name: system_log_changed_at_index
        columns: [changed_at]

  Amenity:
    id: id
    name: string:100 unique
    description: text nullable
    type: enum:hotel,room default:room
    icon: string nullable
    softDeletes: true
    timestamps: true

migrations:
  - create_users_table
  - create_hotels_table
  - create_rooms_table
  - create_bookings_table
  - create_payments_table
  - create_reviews_table
  - create_system_logs_table
  - create_amenities_table

seeders: User, Hotel, Room, Amenity

additional_configs:
  - implement soft deletes for data preservation
  - use enum for controlled value sets
  - implement unique constraints where necessary
  - add indexes for foreign keys and frequently queried columns
